globalArguments:
- "--global.sendanonymoususage=false"
- "--global.checknewversion=false"

additionalArguments:
- "--serversTransport.insecureSkipVerify=true"
- "--log.level=INFO"
- '--providers.kubernetescrd.ingressClass=traefik-external'	
- '--providers.kubernetescrd.allowExternalNameServices=true'
- '--providers.kubernetesingress.allowExternalNameServices=true'	
- '--entryPoints.web.http.redirections.entryPoint.to=:443'	
- '--entryPoints.web.http.redirections.entryPoint.scheme=https'	
- '--entryPoints.web.http.redirections.entryPoint.priority=10'
- '--entryPoints.websecure.http3'
- "--global.sendanonymoususage=false"
- "--global.checknewversion=false"

deployment:
  enabled: true
  replicas: 1
  annotations: {}
  podAnnotations: {}
  additionalContainers: []
  initContainers: []

ports:
  web:
    redirectTo:
      port: websecure
      priority: 10
  websecure:
    tls:
      enabled: true
    http3:
      enabled: true
    advertisedPort: 4443 
ingressRoute:
  dashboard:
    enabled: false

providers:
  kubernetesCRD:
    enabled: true
    ingressClass: traefik-external
    allowExternalNameServices: true
  kubernetesIngress:
    enabled: true
    allowExternalNameServices: true
    publishedService:
      enabled: false

rbac:
  enabled: true

service:
  enabled: true
  type: LoadBalancer
  annotations: {}
  labels: {}
  spec:
    loadBalancerIP: 192.168.0.3
  loadBalancerSourceRanges: []
  externalIPs: []


# -- Create a default IngressClass for Traefik
ingressClass:
  enabled: true
  isDefaultClass: true
  name: traefik-external