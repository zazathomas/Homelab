apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: deluge-ingress
  namespace: media-server
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`www.deluge.z3cyber.pro`)
      kind: Rule
      services:
        - name: deluge-service
          port: 8112
    - match: Host(`deluge.z3cyber.pro`)
      kind: Rule
      services:
        - name: deluge-service
          port: 8112
      middlewares:
        - name: default-headers
  tls:
    secretName: production-cert-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: jellyfin-ingress
  namespace: media-server
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`www.jellyfin.z3cyber.pro`)
      kind: Rule
      services:
        - name: jellyfin-service
          port: 8096
    - match: Host(`jellyfin.z3cyber.pro`)
      kind: Rule
      services:
        - name: jellyfin-service
          port: 8096
      middlewares:
        - name: default-headers
  tls:
    secretName: production-cert-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: sonarr-ingress
  namespace: media-server
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`www.sonarr.z3cyber.pro`)
      kind: Rule
      services:
        - name: sonarr-service
          port: 8989
    - match: Host(`sonarr.z3cyber.pro`)
      kind: Rule
      services:
        - name: sonarr-service
          port: 8989
      middlewares:
        - name: default-headers
  tls:
    secretName: production-cert-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: radarr-ingress
  namespace: media-server
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`www.radarr.z3cyber.pro`)
      kind: Rule
      services:
        - name: radarr-service
          port: 7878
    - match: Host(`radarr.z3cyber.pro`)
      kind: Rule
      services:
        - name: radarr-service
          port: 7878
      middlewares:
        - name: default-headers
  tls:
    secretName: production-cert-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: prowlarr-ingress
  namespace: media-server
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`www.prowlarr.z3cyber.pro`)
      kind: Rule
      services:
        - name: prowlarr-service
          port: 9696
    - match: Host(`prowlarr.z3cyber.pro`)
      kind: Rule
      services:
        - name: prowlarr-service
          port: 9696
      middlewares:
        - name: default-headers
  tls:
    secretName: production-cert-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: readarr-ingress
  namespace: media-server
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`www.readarr.z3cyber.pro`)
      kind: Rule
      services:
        - name: readarr-service
          port: 8787
    - match: Host(`readarr.z3cyber.pro`)
      kind: Rule
      services:
        - name: readarr-service
          port: 8787
      middlewares:
        - name: default-headers
  tls:
    secretName: production-cert-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: default-headers
  namespace: media-server
spec:
  headers:
    browserXssFilter: true
    contentTypeNosniff: true
    forceSTSHeader: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 15552000
    customFrameOptionsValue: SAMEORIGIN
    customRequestHeaders:
      X-Forwarded-Proto: https